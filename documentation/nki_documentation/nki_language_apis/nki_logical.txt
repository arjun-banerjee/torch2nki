-----
nki.language.equal

Signature:
nki.language.equal(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x == y.
((Similar to numpy.equal))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x == y element-wise.
-----
nki.language.not_equal

Signature:
nki.language.not_equal(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x != y.
((Similar to numpy.not_equal))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x != y element-wise.
-----
nki.language.greater

Signature:
nki.language.greater(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x > y.
((Similar to numpy.greater))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x > y element-wise.
-----
nki.language.greater_equal

Signature:
nki.language.greater_equal(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x >= y.
((Similar to numpy.greater_equal))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x >= y element-wise.
-----
nki.language.less

Signature:
nki.language.less(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x < y.
((Similar to numpy.less))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x < y element-wise.
-----
nki.language.less_equal

Signature:
nki.language.less_equal(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x <= y.
((Similar to numpy.less_equal))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x <= y element-wise.
-----
nki.language.logical_and

Signature:
nki.language.logical_and(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x AND y.
((Similar to numpy.logical_and))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x AND y element-wise.
-----
nki.language.logical_or

Signature:
nki.language.logical_or(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x OR y.
((Similar to numpy.logical_or))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x OR y element-wise.
-----
nki.language.logical_xor

Signature:
nki.language.logical_xor(x, y, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of x XOR y.
((Similar to numpy.logical_xor))

Parameters:
x – a tile or a scalar value.
y – a tile or a scalar value. x.shape and y.shape must be broadcastable to a common shape, that will become the shape of the output.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tiles, or whichever input type has the highest precision (see NKI Type Promotion for more information);
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of x XOR y element-wise.
-----
nki.language.logical_not

Signature:
nki.language.logical_not(x, *, dtype=<class 'bool'>, mask=None, **kwargs)

Description:
Element-wise boolean result of NOT x.
((Similar to numpy.logical_not))

Parameters:
x – a tile.
dtype – (optional) data type to cast the output type to (see Supported Data Types for more information); if not specified, it will default to be the same as the data type of the input tile.
mask – (optional) a compile-time constant predicate that controls whether/how this instruction is executed (see NKI API Masking for details)

Returns:
a tile with boolean result of NOT x element-wise.
